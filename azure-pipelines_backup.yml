trigger:
  - Deployment-Webapp

stages:
  - stage: build
    displayName: build and push to container registery
    pool:
      name: Default
    jobs:
      - job: install_dependencies
        steps:
          - script: az login --identity
            displayName: Authenticate Azure CLI using private agent identity
          - script: apt update
            displayName: apt update database
          - script: apt install python python-pip
            displayName: apt install python and pip
          - script: python -m pip install --upgrade flask
            displayName: Install flask application
      - job: install_project_libraries
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: $(pythonVersion)
              displayName: Use Python $(pythonVersion)
          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install setup
              pip install -r requirements.txt
            workingDirectory: $(projectRoot)
            displayName: Install requirements
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
              replaceExistingArchive: true
              verbose: # (no value); this input is optional
          - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
            displayName: 'Upload package'
            artifact: drop
      - job: deployment
        strategy:
          runOnce:
            deploy:
              steps:
        
              - task: UsePythonVersion@0
                inputs:
                  versionSpec: '$(pythonVersion)'
                displayName: 'Use Python version'
        
              - task: AzureWebApp@1
                displayName: 'Deploy Azure Web App : {{ webAppName }}'
                inputs:
                  azureSubscription: $(azureServiceConnectionId)
                  appName: $(webAppName)
                  package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
        
                  # The following parameter is specific to the Flask example code. You may
                  # or may not need a startup command for your app.
        
                  startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'