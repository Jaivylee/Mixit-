trigger:
- Deployment-Webapp

variables:
  #- group: simpleFlaskApp
  - name: azure-resource-group-name
    value: mixit2-rg
  - name: azure-resource-location
    value: westeurope
  - name: azure-web-app-name
    value: miketestmixit
  - name: azure-subscription-id
    value: 7421d281-52e1-4c64-b11d-12ee02151732

  # Project root folder. Point to the folder containing manage.py file.
stages:   
- stage: Deploy_infrastructure
  jobs:
  - job: Deploy_infrastructure
    pool:
      name: Default
    steps:
    - script: |
        az login
        az group create --name $(resourceGroupName) --location $(location)
        az deployment group create --resource-group $(resourceGroupName) --template-file $(templateFile)
- stage: Publish_Code
  dependsOn: Deploy_infrastructure    
  jobs:
  - job: Publish_Code
    variables:
      projectRoot: $(System.DefaultWorkingDirectory)
      pythonVersion: '3.9'
      environmentName: test
      azureServiceConnectionId: 767f3596-1bc3-4135-a908-ef32402461f5
    pool:
      name: Default
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(pythonVersion)'
        displayName: 'Use Python $(pythonVersion)'
      
      - script: |
          python -m venv antenv
          source antenv/bin/activate
          python -m pip install --upgrade pip
          pip install setup
          pip install -r requirements.txt
        workingDirectory: $(projectRoot)
        displayName: "Install requirements"
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(projectRoot)'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true

      - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        displayName: 'Upload package'
        artifact: drop
        steps:

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(pythonVersion)'
        displayName: 'Use Python version'

      - task: AzureWebApp@1
        displayName: 'Deploy Azure Web App : {{ azure-web-app-name }}'
        inputs:
          azureSubscription: $(azure-subscription-id)
          appName: $(azure-web-app-name)
  # - stage: Deploy
  #   displayName: 'Deploy Web App'
  #   dependsOn: Build
  #   condition: succeeded()
  #   jobs:
  #   - deployment: DeploymentJob
  #     pool:
  #       vmImage: $(vmImageName)
  #     environment: $(environmentName)
  #     strategy:
  #       runOnce:
  #         deploy:
  #           steps:
  
  #           - task: UsePythonVersion@0
  #             inputs:
  #               versionSpec: '$(pythonVersion)'
  #             displayName: 'Use Python version'
  
  #           - task: AzureWebApp@1
  #             displayName: 'Deploy Azure Web App : {{ webAppName }}'
  #             inputs:
  #               azureSubscription: $(azureServiceConnectionId)
  #               appName: $(webAppName)
  #               package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
    
